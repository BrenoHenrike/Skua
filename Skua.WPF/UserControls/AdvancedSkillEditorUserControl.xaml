<UserControl
    x:Class="Skua.WPF.UserControls.AdvancedSkillEditorUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Skua.WPF.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vms="clr-namespace:Skua.Core.ViewModels;assembly=Skua.Core"
    xmlns:wpf="clr-namespace:Skua.WPF"
    d:DataContext="{d:DesignInstance vms:AdvancedSkillEditorViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid Height="auto">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="285" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <!--#region  Set SkillTimeout Group Box-->
        <GroupBox
            Grid.Row="0"
            Grid.Column="0"
            Margin="6,6,3,3"
            Header="Set SkillTimeout">
            <TextBox
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="3"
                materialDesign:HintAssist.Hint="SkillTimeout"
                Text="{Binding CurrentSkillTimeout, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.ToolTip>
                    <TextBlock>
                        The maximum time it will wait for a skill in multiples of the SkillTimer (default 100ms). Default SkillTimeout is 250 (25000 ms).<LineBreak />
                        Note that the skill timeout is only used when Wait for Cooldown is enable.</TextBlock>
                </TextBox.ToolTip>
                <b:Interaction.Behaviors>
                    <wpf:TextBoxOnlyNumbersBehavior />
                </b:Interaction.Behaviors>
            </TextBox>
        </GroupBox>
        <!--#endregion-->

        <!--#region  Use Mode Group Box-->
        <GroupBox
            Grid.Row="0"
            Grid.Column="1"
            Margin="3,6,6,3"
            Header="Use Mode">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <CheckBox
                    Grid.Column="0"
                    Margin="3"
                    HorizontalAlignment="Stretch"
                    materialDesign:CheckBoxAssist.CheckBoxSize="25"
                    Content="Wait for Cooldown"
                    IsChecked="{Binding UseWaitModeBool}">
                    <CheckBox.ToolTip>
                        <TextBlock>
                            Will wait for either the skill to fully cooldown or the defined skill timeout (default is 25 seconds).<LineBreak />
                            It is important that you use &quot;Skip if not available&quot; use rule for better control of the skill combo.</TextBlock>
                    </CheckBox.ToolTip>
                </CheckBox>
                <CheckBox
                    Grid.Column="1"
                    Margin="3"
                    HorizontalAlignment="Stretch"
                    materialDesign:CheckBoxAssist.CheckBoxSize="25"
                    Content="Use if Available"
                    IsChecked="{Binding UseWaitModeBool, Converter={StaticResource InvertBooleanConverter}}"
                    ToolTip="Whenever a skill is available it will be used, if it is not then it will be skipped" />
            </Grid>
        </GroupBox>
        <!--#endregion-->

        <!--#region Skills ListBox-->
        <GroupBox
            Grid.Row="1"
            Grid.Column="0"
            Margin="6,3,3,3"
            Header="Skills">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <ListBox
                    Grid.Row="0"
                    MaxHeight="357.5"
                    d:ItemsSource="{d:SampleData ItemCount=5}"
                    wpf:ScrollViewerHelper.ShiftScrollHorizontally="True"
                    ItemsSource="{Binding CurrentSkillsList, UpdateSourceTrigger=PropertyChanged}"
                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    SelectedIndex="{Binding SelectedSkillIndex}"
                    SelectedItem="{Binding SelectedSkill}">
                    <ListBox.ToolTip>
                        <TextBlock>
                            <Run FontWeight="Bold">Up/Down Arrows:</Run>
                            Navigate between skills.<LineBreak />
                            <Run FontWeight="Bold">Ctrl + Up/Down Arrows:</Run>
                            Move the selected skill.<LineBreak />
                            <Run FontWeight="Bold">Delete:</Run>
                            Removes the selected skill.<LineBreak />
                            <Run FontWeight="Bold">Alt + Delete:</Run>
                            Removes all skills.<LineBreak />
                            <Run FontWeight="Bold">Enter:</Run>
                            Opens edit dialog.</TextBlock>
                    </ListBox.ToolTip>
                    <ListBox.InputBindings>
                        <KeyBinding
                            Key="Up"
                            Command="{Binding MoveSkillUpCommand}"
                            Modifiers="Ctrl" />
                        <KeyBinding Key="Up" Command="{Binding SelectSkillUpCommand}" />
                        <KeyBinding
                            Key="Down"
                            Command="{Binding MoveSkillDownCommand}"
                            Modifiers="Ctrl" />
                        <KeyBinding Key="Down" Command="{Binding SelectSkillDownCommand}" />
                        <KeyBinding Key="Delete" Command="{Binding RemoveSkillCommand}" />
                        <KeyBinding
                            Key="Delete"
                            Command="{Binding ClearSkillsCommand}"
                            Modifiers="Alt" />
                        <KeyBinding Key="Return" Command="{Binding EditSkillCommand}" />
                    </ListBox.InputBindings>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayString, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <DockPanel
                    Grid.Row="1"
                    Margin="0,3,0,0"
                    LastChildFill="False">
                    <DockPanel.Resources>
                        <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="Button" />
                    </DockPanel.Resources>
                    <Button Command="{Binding SelectSkillUpCommand}" Content="{materialDesign:PackIcon Kind=ArrowUp}" />
                    <Button Command="{Binding MoveSkillUpCommand}" Content="{materialDesign:PackIcon Kind=ArrowUpBold}" />
                    <Button
                        Margin="5,0,0,0"
                        Command="{Binding SelectSkillDownCommand}"
                        Content="{materialDesign:PackIcon Kind=ArrowDown}" />
                    <Button Command="{Binding MoveSkillDownCommand}" Content="{materialDesign:PackIcon Kind=ArrowDownBold}" />
                    <Button
                        Command="{Binding RemoveSkillCommand}"
                        Content="{materialDesign:PackIcon Kind=Remove}"
                        DockPanel.Dock="Right" />
                    <Button
                        Command="{Binding EditSkillCommand}"
                        Content="{materialDesign:PackIcon Kind=Edit}"
                        DockPanel.Dock="Right" />
                </DockPanel>
            </Grid>
        </GroupBox>
        <!--#endregion-->

        <!--#region Use Rules GroupBox-->
        <GroupBox
            Grid.Row="1"
            Grid.Column="1"
            Margin="3,3,6,3"
            Header="Use Rules">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <local:SkillRuleUserControl DataContext="{Binding UseRules}" />
                <StackPanel
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Center"
                    DockPanel.Dock="Bottom"
                    Orientation="Horizontal">
                    <StackPanel.ToolTip>
                        <TextBlock>
                            Adds the skill index with specified use rules.<LineBreak />
                            Note that the numbers reflect only skills<LineBreak />
                            and not the auto attack, so 1 is your in-game skill 2.</TextBlock>
                    </StackPanel.ToolTip>
                    <StackPanel.Resources>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="Margin" Value="3" />
                        </Style>
                    </StackPanel.Resources>
                    <Button
                        Command="{Binding AddSkillToCurrentCommand}"
                        CommandParameter="1"
                        Content="1" />
                    <Button
                        Command="{Binding AddSkillToCurrentCommand}"
                        CommandParameter="2"
                        Content="2" />
                    <Button
                        Command="{Binding AddSkillToCurrentCommand}"
                        CommandParameter="3"
                        Content="3" />
                    <Button
                        Command="{Binding AddSkillToCurrentCommand}"
                        CommandParameter="4"
                        Content="4" />
                    <Button
                        Command="{Binding AddSkillToCurrentCommand}"
                        CommandParameter="5"
                        Content="{materialDesign:PackIcon Kind=HealthPotion}" />
                </StackPanel>
            </Grid>
        </GroupBox>
        <!--#endregion-->

        <Grid
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBox
                Grid.Column="0"
                Margin="6,3,3,6"
                materialDesign:HintAssist.Hint="Class Name"
                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                Text="{Binding CurrentClassName}" />
            <ComboBox
                Grid.Column="1"
                Margin="3,1,3,4"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Class Use Mode"
                ItemsSource="{Binding ClassUseModes}"
                SelectedIndex="{Binding SelectedClassUseMode}"
                Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
            <Button
                Grid.Column="2"
                Height="auto"
                Margin="3,3,6,6"
                Command="{Binding SaveSkillsCommand}"
                Content="Save">
                <Button.ToolTip>
                    <TextBlock><Run FontWeight="Bold">Note:</Run>
                        It will override existing skills with the same class name and use mode.</TextBlock>
                </Button.ToolTip>
            </Button>
        </Grid>
    </Grid>
</UserControl>